# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Pull latest sources.
      - name: Checkout
        uses: actions/checkout@v3

      # Install required tools.
      - name: Install Required tools
        run: |
          sudo apt-get update
          sudo apt-get install inkscape
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Setup the primary web files.
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          # This generated directory is root-owned,
          #   so we won't be able to augment it with
          #   later stuff.
          # Therefore, we put it into a temporary location.
          destination: ./_jekyll_site

      # Setup the sample client for use with github pages.
      - name: Build public images.
        run: |
          bin/generate-public-images.sh
      - name: Build web client
        run: |
          ( cd web-client && npm install )
          ( cd web-client && npm run pages-build )

      # Pull the two set of public documents together into one place,
      #   for deploying into the public site.
      - name: Assemble Documents
        run: |
          mkdir -p _site
          cp -R ./_jekyll_site/* ./_site/.
          mv web-client/dist ./_site/live

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
